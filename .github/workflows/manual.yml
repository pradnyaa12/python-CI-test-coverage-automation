name: CI Test and Coverage

on:
  push:
    branches:
      - main  # Automatically triggers the workflow on code push to the main branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Tests and Generate Coverage
        run: |
          pytest --cov=./ --cov-report=html --cov-report=term

      - name: Check Coverage
        id: coverage-check
        run: |
          coverage=$(pytest --cov=./ --cov-report=term | grep "TOTAL" | awk '{print $4}')
          echo "Coverage is: $coverage"
          echo "::set-output name=coverage::$coverage"

      - name: Fail if coverage below 70%
        run: |
          coverage=$(pytest --cov=./ --cov-report=term | grep "TOTAL" | awk '{print $4}' | sed 's/%//')
          if (( $(echo "$coverage < 70" | bc -l) )); then
            echo "Coverage is less than 70%! Failing the job."
            exit 1
          else
            echo "Coverage is above 70%."
          fi

  merge:
    needs: test  # This job depends on the 'test' job passing
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && success() }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Merge to test branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout test
          git merge main
          git push origin test
